// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext {
        kotlin_version = "1.4.32"
        retrofit_version = '2.4.0'
        lifecycle_version = '2.0.0'
        kodein_version = '5.2.0'
        gradleVersion = '6.5.0'
        dataBindingCompilerVersion = gradleVersion // Always need to be the same.

    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        def nav_version = "2.3.4"
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.5'
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        maven { url 'https://maven.google.com' }
        jcenter()
        maven { url 'https://jitpack.io' }
        maven {
            url  "https://dl.bintray.com/susonthapa/curved-bottom-navigation"
        }
        def githubProperties = new Properties()
        githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
        repositories {
            maven {
                name = "GitHubPackages"

                url = uri("https://maven.pkg.github.com/Cuberto/liquid-swipe-android")
                credentials {
                    /** Create github.properties in root project folder file with
                     ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                     ** Or set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/
                    username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                    password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}